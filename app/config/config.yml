imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }


# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
        engine: twig

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        #driver: pdo_mysql
        #host: '%database_host%'
        #port: '%database_port%'
        #dbname: '%database_name%'
        #user: '%database_user%'
        #password: '%database_password%'
        #charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        driver: pdo_sqlite
        path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            CustomFOSUserBundle:
                prefix: Custom\FOSUser\Model
                type: xml
                dir: Resources/config/doctrine-mapping

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }


fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

# app/config/config.yml
vich_uploader:
    db_driver:  orm         # or mongodb or propel or phpcr - default db driver
    mappings:
        dictionary_source:
            #uri_prefix:         web   # uri prefix to resource
            upload_destination: %app.dictionary_sources_dir%     # gaufrette storage fs id, required
            #delete_on_remove:   true  # determines whether to delete file upon removal of entity
            #delete_on_update:   true  # determines wheter to delete the file upon update of entity
            #inject_on_load:     false # determines whether to inject a File instance upon load
            namer: app.vich_uploader_namer


easy_admin:
    design:
        form_theme: ['horizontal', 'VichUploaderBundle:Form:fields.html.twig']
    entities:
        User:
            class: AppBundle\Entity\User
            form:
                fields:
                    - username
                    - property: email
                      type: email
                      type_options: { required: false }
                    - enabled
                    - property: plainPassword
                      label: password
                      type: password
                      type_options: { required: true}
                    - roles
            edit:
                fields:
                    - property: plainPassword
                      label: new password
                      type: password
                      type_options: {required: false}

        Dictionary:
            class: AppBundle\Entity\Dictionary

            list:
                fields:
                    - 'name'
                    - 'wordCount'
                    - property: 'loaded'
                      template: '@CustomEasyAdminBundle/Resources/views/dictionary/field_load_progress.html.twig'
                actions: ['show', 'edit', 'delete' ]

            show:
                fields: [ 'id', 'name', 'updatedAt', 'words' ]
            new:
                fields:
                    - name
                    - property: sourceFile
                      type: vich_file
                      type_options: { required: true }
            edit:
                fields: [ 'name' ]
